/*
1D Poiseuille flow */

load("dimension") $
load("draw") $
alias(di,  dimension) $

/* print info */
who(e):= printf(true, "~8a :  ~12a : ~40a~%", e , get(e, 'di), get(e, 'de))$

/* register units and description of a parameter */
un(e, u, d):= (put(e, u, 'di), put(e, d, 'de)) $

un('Velocity     , 'length/'time           , "velocity units") $
un('Acceleration , di('Velocity)/'time     , "acceleration units") $
un('Force        , di('Acceleration)*'mass , "force units") $
un('Stress       , di('Force)/length^2     , "units of stress in 3D") $
un('rho          , 'mass/'length^3         , "physical density of DPD in 3D") $
un('Ly           , 'length                 , "domain size in OY") $
un('nu0          , 'length^2/'time         , "kinematic static viscosity of DPD solvent") $
un('f0           , di('Acceleration)       , "amplitude of a body acceleration") $
un('tau_xy       , di('Stress)             , "stress component") $
un('y            , 'length                 , "coordinate") $
un('vmax         , di('Velocity)           , "maximum velocity") $
un('Re           , 1                       , "Reynolds number") $

mu0    : 'nu0*'rho;

/* define the only non-zero component of a stress tensor */
assume('y>0);
gradef(ker(z), dker('z));
tau_xy:  integrate(ker('z-'y)*vx('z), 'z, 0, 'y);

eq: diff(tau_xy, y) = - 'f0*'rho;
assume(Ly>0);

atvalue(vx('y),           'y=0,     0);
atvalue(diff(vx('y), 'y), 'y=0, 'vmax);

laplace(eq, 'y, 'k); 