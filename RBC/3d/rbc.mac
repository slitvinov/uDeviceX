/*

[1] Fedosov, Dmitry A. Multiscale modeling of blood flow and soft
matter. Brown University, 2010.

[42] Dao, M., J. Li, and S. Suresh. "Molecularly based analysis of
deformation of spectrin network and human erythrocyte." Materials
Science and Engineering: C 26.8 (2006): 1232-1244.

*/

load ("scifac") $
load("abs_integrate");
load("scifac");
load("multiadditive") $
load("membr_utils.mac") $

declare([Cq, q, ka, kb, kd, kv, A0tot, V0tot, A0, theta0],    membrane_constant)  $
declare([p1_v, p2_v, p3_v, p4_v],                             nonscalar) $
declare([a21_v, a13_v, a31_v, a32_v, a34_v, a24_v],           nonscalar) $
declare([ksi_v, sig_v, tc_v ],                                nonscalar) $

constrains: [
/*1*/ a21_v  - (p2_v - p1_v),
      a31_v  - (p3_v - p1_v),
      a32_v  - (p3_v - p2_v),  /* See Fig A.1 and Fig. A.2 [1]  */
      a34_v  - (p3_v - p4_v),
/*5*/ a24_v  - (p2_v - p4_v),
      tc_v   - (p1_v  + p2_v + p3_v)/3,
      ksi_v  - cp(a21_v, a31_v),
      sig_v  - cp(a34_v, a24_v),
      cos(theta) - dot(ksi_v,sig_v)/sqrt( dot(ksi_v,ksi_v)) / sqrt(dot(sig_v,sig_v)),
/*10*/4*Ak^2 - dot(ksi_v,ksi_v),
      Varea  - ka*(Ak+Arest-A0tot)^2/(2*A0tot),
      Vvol   - kv*(Vk+Vrest-V0tot)^2/(2*V0tot),      
      Vst    - Cq/Ak^q,
      Vk     - 1/6*dot(ksi_v,tc_v),
/*15*/Vb     - kb*(1-cos(theta - theta0))];

%cvars%: ['p1_v, 'p2_v, 'p3_v, 'p4_v];

cp_and_dot_vars(e):= block([A, B],
  A: listofvars(args_of(args_of( e,  'cp ), 'del)),
  B: listofvars(args_of(args_of( e,  'dot), 'del)),
  ldifference(append(A, B), %cvars%));
cp_and_dot_vars_emptyp(e):= emptyp(cp_and_dot_vars(e));

eq: mdiff(constrains);
lvars: ldifference( listofvars(args_of(eq, del)), %cvars%);
lvars: map('del, lvars);

good: [];
bad : linsolve(eq, lvars);

while not emptyp(bad) do  (
  [good, bad] : pred_partition(append(good, bad), cp_and_dot_vars_emptyp),
  bad: subst(good, bad));

/* list of energies */
%evars%: ['Varea, 'Vvol, 'Vst, 'Vb];

for v in %cvars% do (
  for e in %evars% do (
    d: assoc( del(e), good),
    d: resimp(d),
    Force[e, v]: gcfac(fullratsimp( -sdiff(d, del(v))))));

matchdeclare([A1, A2], true);
defrule(rcp, dot(sk(A1), A2), cp(A1, A2));
defrule(ta31s1, a31_v, a32_v + a21_v);
defrule(ta24s1, a24_v, a23_v + a34_v);
defrule(ta34s1, a34_v, a31_v + a14_v);
defrule(Aback , Arest, Atot - Ak);
defrule(Vback , Vrest, Vtot - Vk);

FOO(e):= scanmap('factor,
  fullratsimp(trigexpand(expand(apply1(factor(fullratsimp(e)),
          ta31s1, rcp, Aback, Vback)))));

for v in %cvars% do
for e in %evars% do
Force[e,v]: FOO(Force[e,v]);

/*
factor(FOO(Force['Varea, 'p1_v]));
factor(FOO(Force['Vst,   'p1_v]));
factor(FOO(Force['Vvol,   'p1_v])); */
