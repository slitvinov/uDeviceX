unitsSetup( lmax,  p,  cq,  kb,  ka,  kv,  gammaC,
             totArea0,  totVolume0,  lunit,  tunit,  ndens,  prn):= 
     block([], 
          lrbc : 1/1000000,
          trbc : 73/24257,
        

         ll : lunit / lrbc,
         tt : tunit / trbc,

        params%kbT : 580 * 250 * pow(ll, -2) * pow(tt, 2),
        params%p : p / ll,
        params%lmax : lmax / ll,
        params%q : 1,
        params%Cq : cq * params%kbT * pow(ll, -2),
        params%totArea0 : totArea0 * pow(ll, -2),
        params%totVolume0 : totVolume0 * pow(ll, -3),
        params%l0 : sqrt(params%totArea0 / (2*params%nvertices - 4) * 4/sqrt(3)),
        params%ka : ka * params%kbT / (params%totArea0 * params%l0 * params%l0),
        params%kv : kv * params%kbT / (6 * params%totVolume0 * powf(params%l0, 3)),
        params%gammaC : gammaC * 580 * pow(tt, 1),
        params%gammaT : 3 * params%gammaC,

         phi : 697/100 / 180*M_PI,
        params%sinTheta0 : sin(phi),
        params%cosTheta0 : cos(phi),
        params%kb : kb * params%kbT,

        params%kbToverp : params%kbT / params%p,
        params%sint0kb : params%sinTheta0 * params%kb,
        params%cost0kb : params%cosTheta0 * params%kb,
        CUDA_CHECK( cudaMemcpyToSymbol  (devParams, &params, sizeof(Params)) ),

        if (prn)
        (
            printf("\n************* Parameters setup *************\n"),
            printf("Started with <RBC space (DPD space)>:\n"),
            printf("    DPD unit of time:  %e\n",   tunit),
            printf("    DPD unit of length:  %e\n\n", lunit),
            printf("\t Lmax    %25/2  (%25/2)\n", lmax,   params%lmax),
            printf("\t l0      %25/2\n",           params%l0),
            printf("\t p       %25/2  (%25/2)\n", p,      params%p),
            printf("\t Cq      %25/2  (%25/2)\n", cq,     params%Cq),
            printf("\t kb      %25/2  (%25/2)\n", kb,     params%kb),
            printf("\t ka      %25/2  (%25/2)\n", ka,     params%ka),
            printf("\t kv      %25/2  (%25/2)\n", kv,     params%kv),
            printf("\t gammaC  %25/2  (%25/2)\n\n", gammaC, params%gammaC),

            printf("\t kbT     %12e in dpd\n", params%kbT),
            printf("\t area    %25/2  (%25/2)\n", totArea0,  params%totArea0),
            printf("\t volume  %25/2  (%25/2)\n", totVolume0, params%totVolume0),
            printf("************* **************** *************\n\n")
        )
    )$
