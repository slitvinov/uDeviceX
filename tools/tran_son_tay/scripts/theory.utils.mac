/* convolution */
conv1(e, i)   ::= subst(i=1, e) + subst(i=2, e) + subst(i=3, e);
conv2(e, i, j)::= buildq([e, i, j], conv1(conv1(e, i), j));

cross(v, u):=[
  u[2]*v[3]-v[2]*u[3],
  v[1]*u[3]-u[1]*v[3],
  u[1]*v[2]-v[1]*u[2]];

vabs(v):=sqrt(lsum(e^2, e, v));
vnorm(v):=block(
  [l: vabs(v)],
  create_list(e/l, e, v));

dA :
block(
  [x, y, z, xu, xv, E, F, G, dA],
  x : 'a*cos('u)*sin('v), /* u: [0, 2*%pi] */
  y : 'b*sin('u)*sin('v), /* v: [0,   %pi] */
  z : 'c*cos('v),
  xu : diff([x,y,z], 'u),
  xv : diff([x,y,z], 'v),
  E : xu . xu,
  F : xu . xv,
  G : xv . xv,
  dA : sqrt(E*G-F^2),
  trigsimp(dA));

V: 4/3*%pi*'a*'b*'c;
si(e):=q2e(e, 'u, 0, 2*%pi,   'v, 0, %pi);