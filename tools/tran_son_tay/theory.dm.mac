load("theory.utils.mac") $
load("romberg") ;
load("q2.mac")  ;

U(i):= ('f*['a/'b*'y, -'b/'a*'x, 0])[i];          /* eq (2) */
r(i):= ['x, 'y, 'z][i];

n(i):=concat('n, i);
P(i,j):=kron_delta(i, j) - n(i)*n(j);

dU(i, j):=diff(U(i), r(j));
e(i,j):=1/2* (dU(i,j) + dU(j,i));

es(i,j):=conv2(P(i,'k)*P(j,'l)*e('k, 'l),       'k, 'l);
T: conv2(P('i,'j)*dU('i,'j),      'i, 'j);
ew(i,j):=es(i, j) - 1/2*T*P(i, j);

eew: conv2(ew('i,'j)*ew('i,'j), 'i, 'j);
eew: factor(eew);

nn: sqrt(n(1)^2 + n(2)^2 + n(3)^2);
eew: psubst([n1=n1/nn, n2=n2/nn, n3=n3/nn], eew);
eew: factor(eew);
eew: subst(nn^2=1, eew);

x : 'a*cos('u)*sin('v);
y : 'b*sin('u)*sin('v);
z : 'c*cos('v);
xu : diff([x,y,z], 'u);
xv : diff([x,y,z], 'v);
E : xu . xu;
F : xu . xv;
G : xv . xv;
dA : sqrt(E*G-F^2);
dA : trigsimp(dA);

nel: factor(trigsimp(cross(xu, xv))); /* surface norm for ellipsoid */
nel: vnorm(nel);

/* 5.6	1.5	3.2 */
e0: subst(
  [
    'n1 = nel[1],
    'n2 = nel[2],
    'n3 = nel[3]],
  eew*dA);

var1: [a=5.6, b=1.5, c=3.2, f=6.22];
var2: [a=6.0, b=1.5, c=3.0, f=9.42];
var3: [a=6.7, b=1.6, c=2.5, f=12.7];

e00: subst(var1, e0) $
e1: q2e(e00, 'u, 0, 2*%pi,   'v, 0, %pi);

e00: subst(var2, e0) $
e2: q2e(e00, 'u, 0, 2*%pi,   'v, 0, %pi);

e00: subst(var3, e0) $
e3: q2e(e00, 'u, 0, 2*%pi,   'v, 0, %pi);

[e2, e3] / e1;
[e2, e3] / e1;

[0.060, 0.142] / 0.021;
